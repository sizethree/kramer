name: gh.build
on: [push]
jobs:
  stable-sync:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    steps:
      - uses: actions/checkout@v1
      - name: install-stable
        run: rustup toolchain install stable
      - name: use-stable
        run: rustup default stable
      - name: build-sync
        run: cargo build
      - name: test-sync
        run: cargo test
        env:
          REDIS_HOST: localhost
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}
  stable-async:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    steps:
      - uses: actions/checkout@v1
      - name: install-latest
        run: rustup toolchain install stable
      - name: use-stable
        run: rustup default stable
      - name: build-async
        run: cargo build --features kramer-async
      - name: test-async
        run: cargo test --features kramer-async
        env:
          REDIS_HOST: localhost
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}
  nightly-sync:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    steps:
      - uses: actions/checkout@v1
      - name: install-nightly
        run: rustup toolchain install nightly
      - name: use-nightly
        run: rustup default nightly
      - name: build
        run: cargo build
      - name: test-sync
        run: cargo test --quiet
        env:
          REDIS_HOST: localhost
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}
      - name: bench-sync
        run: cargo bench --quiet
        env:
          REDIS_HOST: localhost
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}
  nightly-async:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    steps:
      - uses: actions/checkout@v1
      - name: install-nightly
        run: rustup toolchain install nightly
      - name: use-nightly
        run: rustup default nightly
      - name: build
        run: cargo build --features kramer-async
      - name: test-async
        run: cargo test --features kramer-async --quiet
        env:
          REDIS_HOST: localhost
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}
      - name: bench-async
        run: cargo bench --features kramer-async --quiet
        env:
          REDIS_HOST: localhost
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}

